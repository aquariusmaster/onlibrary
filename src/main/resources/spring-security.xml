
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">

       <global-method-security pre-post-annotations="enabled"/>

    <http access-denied-page="/denied">
        <intercept-url pattern="/book*" access="ROLE_USER,ROLE_ANONYMOUS" />
        <intercept-url pattern="/add*" access="ROLE_ADMIN" />
        <intercept-url pattern="/delete/*" access="ROLE_ADMIN" />
        <form-login login-page="/login" default-target-url="/index"
                    authentication-failure-url="/login?error=true" />
        <logout logout-url="/logout" logout-success-url="/index" />

        <anonymous username="guest" granted-authority="ROLE_ANONYMOUS" />
        <remember-me key="onlibraryAppKey" user-service-ref="jdbcUserService" />
    </http>

       <beans:bean name="passwordEncoder"
                   class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

       <authentication-manager alias="authenticationManager">
              <authentication-provider>
                     <password-encoder ref="passwordEncoder"/>
                     <jdbc-user-service data-source-ref="dataSource"
                                        authorities-by-username-query='select username, authority from users where binary username = ?'
                                        users-by-username-query='select username, password, enabled from users where binary username = ?'
                                        id="jdbcUserService" />

              </authentication-provider>
       </authentication-manager>

</beans:beans>